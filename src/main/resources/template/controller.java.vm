package $!{package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.apache.ibatis.annotations.Delete;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import javax.validation.Valid;
import com.github.pagehelper.PageHelper;
import java.util.Objects;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import $!{package.Service}.$!{table.serviceName};
import $!{package.Entity}.$!{table.entityName};

#if(${superControllerClassPackage})
import $!{superControllerClassPackage};
#end

/**
 *
 *  $!{table.comment} 前端控制器
 *
 * @author: $!{author}
 * @date: $!{date}
 */
@RestController
@CrossOrigin(origins = "*", maxAge = 3600, methods = {RequestMethod.POST, RequestMethod.GET})
@RequestMapping({"#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end"})
#if(${kotlin})
class $!{table.controllerName}#if(${superControllerClass}) : $!{superControllerClass}()#end

#else
@Api(value = "$!{table.comment}管理")
#if(${superControllerClass})
public class $!{table.controllerName} extends $!{superControllerClass} {
#else
public class $!{table.controllerName} {
#end

    @Autowired
    private $!{table.serviceName} service;

    @PostMapping({"page"})
    @ApiOperation("列表")
    public String page(@RequestBody PageQuery pageQuery){
        IPage<$!{table.entityName}> page = new Page<>(pageQuery.getPageIndex(), pageQuery.getPageSize());
        LambdaQueryWrapper<$!{table.entityName}> eq = Wrappers.<$!{table.entityName}>lambdaQuery();
        IPage<$!{table.entityName}> list = service.page(page, eq);
        PageModel p= new PageModel(pageQuery.getPageIndex(), pageQuery.getPageSize(), list.getRecords());
        p.setRecordCount(page.getTotal());
        return JSONUtil.toJsonStr(MsgVo.Ok(p));
    }

    @GetMapping({"/getOne/{id}"})
    @ApiOperation("详情")
    public String getById(@PathVariable("id") String id) {
        return JSONUtil.toJsonStr(MsgVo.Ok(service.getById(id)));
    }

    @PostMapping({"save"})
    @ApiOperation("新增")
    public String save(@RequestBody @Valid $!{table.entityName} entity) {
        return JSONUtil.toJsonStr(MsgVo.Ok(service.save(entity)));
    }

    @PostMapping({"update"})
    @ApiOperation("修改")
    public String update(@RequestBody $!{table.entityName} entity) {
        boolean b = service.updateById(entity);

        return JSONUtil.toJsonStr(MsgVo.Ok(b));
    }

    @PostMapping({"/remove/{id}"})
    @ApiOperation("删除")
    public String remove(@PathVariable("id") String id) {
        boolean b = service.removeById(id);

        return JSONUtil.toJsonStr(MsgVo.Ok(b));
    }
}
#end